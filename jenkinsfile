pipeline {
    agent any
    
    environment {
        DOCKERHUB_TOKEN = credentials('firs-pipe')
    }
    
    stages {
        stage('Checkout Git repository') {
            steps {
                echo 'Pulling'
                git branch: 'NADIA', url: 'https://github.com/ipactconsult/BNA_SmartFuture_Workshop_React_Web.git'
            }
        }
        
        stage('Install dependencies - Backend') {
            steps {
                dir('BNA-dashboard/backend') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Test - Backend') {
            steps {
                dir('BNA-dashboard/backend') {
                    sh 'npm test'
                }
            }
        }
        
        stage('Build - Backend') {
            steps {
                dir('BNA-dashboard/backend') {
                    sh 'npm run build'
                }
            }
        }
        
        stage('Install dependencies - React') {
            steps {
                dir('BNA-dashboard/admin') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Build - React') {
            steps {
                dir('BNA-dashboard/admin') {
                    sh 'npm run build'
                }
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
        
        stage('Build and Push Docker Image - Backend') {
            steps {
                dir('BNA-dashboard/backend') {
                    script {
                        def dockerImage = docker.build("product_management", "-f Dockerfile .")
                        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                            dockerImage.push()
                        }
                    }
                }
            }
        }

        stage('Build and Push Docker Image - React') {
            steps {
                dir('BNA-dashboard/admin') {
                    script {
                        def dockerImage = docker.build("aadmin", "-f Dockerfile .")
                        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                            dockerImage.push()
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build and tests completed successfully!'
        }
        failure {
            echo 'Build or tests failed.'
        }
    }
}
